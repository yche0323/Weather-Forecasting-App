{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yjche\\\\JSProjects\\\\Personal\\\\weather-forecasting-app\\\\client\\\\src\\\\components\\\\LocationButton.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationButton = ({\n  onCitySelect\n}) => {\n  const handleGetLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        onCitySelect(latitude.toString(), longitude.toString());\n      }, error => {\n        console.error(\"Error getting location:\", error);\n      });\n    } else {\n      console.error(\"Geolocation not supported by this browser.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetLocation,\n      children: \"Get Current Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = LocationButton;\nexport default LocationButton;\nvar _c;\n$RefreshReg$(_c, \"LocationButton\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LocationButton","onCitySelect","handleGetLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","toString","error","console","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yjche/JSProjects/Personal/weather-forecasting-app/client/src/components/LocationButton.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ninterface LocationButtonProps {\r\n  onCitySelect: (lat: string, lng: string) => void;\r\n}\r\n\r\nconst LocationButton: React.FC<LocationButtonProps> = ({ onCitySelect }) => {\r\n  const handleGetLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          onCitySelect(latitude.toString(), longitude.toString());\r\n        },\r\n        (error) => {\r\n          console.error(\"Error getting location:\", error);\r\n        }\r\n      );\r\n    } else {\r\n      console.error(\"Geolocation not supported by this browser.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleGetLocation}>Get Current Location</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationButton;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM1B,MAAMC,cAA6C,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAC1E,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIC,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;QACZ,MAAM;UAAEC,QAAQ;UAAEC;QAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;QAC/CR,YAAY,CAACM,QAAQ,CAACG,QAAQ,CAAC,CAAC,EAAEF,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC;MACzD,CAAC,EACAC,KAAK,IAAK;QACTC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CACF,CAAC;IACH,CAAC,MAAM;MACLC,OAAO,CAACD,KAAK,CAAC,4CAA4C,CAAC;IAC7D;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAc,QAAA,eACEd,OAAA;MAAQe,OAAO,EAAEZ,iBAAkB;MAAAW,QAAA,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV,CAAC;AAACC,EAAA,GAtBInB,cAA6C;AAwBnD,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}