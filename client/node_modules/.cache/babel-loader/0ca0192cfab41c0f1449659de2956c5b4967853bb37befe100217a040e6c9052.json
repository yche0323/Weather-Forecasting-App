{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yjche\\\\JSProjects\\\\Personal\\\\weather-forecasting-app\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport WeatherPage from \"./pages/WeatherPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [location, setLocation] = useState(null);\n  const handleCitySelect = (lat, lng, loc) => {\n    setLatitude(lat);\n    setLongitude(lng);\n    setLocation(loc);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(HomePage, {\n          onCitySelect: handleCitySelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `/weather?latitude=${latitude}&longitude=${longitude}`,\n        element: latitude && longitude && location && /*#__PURE__*/_jsxDEV(WeatherPage, {\n          onCitySelect: handleCitySelect,\n          latitude: latitude,\n          longitude: longitude,\n          location: location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"fFJeMouFXIMvZIwPShsyK64lY80=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Navigate","HomePage","WeatherPage","jsxDEV","_jsxDEV","App","_s","latitude","setLatitude","longitude","setLongitude","location","setLocation","handleCitySelect","lat","lng","loc","children","path","element","onCitySelect","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/yjche/JSProjects/Personal/weather-forecasting-app/client/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport WeatherPage from \"./pages/WeatherPage\";\n\nconst App: React.FC = () => {\n  const [latitude, setLatitude] = useState<string | null>(null);\n  const [longitude, setLongitude] = useState<string | null>(null);\n  const [location, setLocation] = useState<string | null>(null);\n\n  const handleCitySelect = (lat: string, lng: string, loc: string) => {\n    setLatitude(lat);\n    setLongitude(lng);\n    setLocation(loc);\n  };\n\n  return (\n    <Router>\n      <Routes>\n        <Route\n          path=\"/home\"\n          element={<HomePage onCitySelect={handleCitySelect} />}\n        />\n        <Route\n          path={`/weather?latitude=${latitude}&longitude=${longitude}`}\n          element={\n            latitude &&\n            longitude &&\n            location && (\n              <WeatherPage\n                onCitySelect={handleCitySelect}\n                latitude={latitude}\n                longitude={longitude}\n                location={location}\n              />\n            )\n          }\n        />\n        <Route path=\"/\" element={<Navigate to=\"/home\" />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,aAAa,IAAIC,MAAM,EACvBC,KAAK,EACLC,MAAM,EACNC,QAAQ,QACH,kBAAkB;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,WAAW,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EAC7D,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAgB,IAAI,CAAC;EAC/D,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAgB,IAAI,CAAC;EAE7D,MAAMkB,gBAAgB,GAAGA,CAACC,GAAW,EAAEC,GAAW,EAAEC,GAAW,KAAK;IAClER,WAAW,CAACM,GAAG,CAAC;IAChBJ,YAAY,CAACK,GAAG,CAAC;IACjBH,WAAW,CAACI,GAAG,CAAC;EAClB,CAAC;EAED,oBACEZ,OAAA,CAACP,MAAM;IAAAoB,QAAA,eACLb,OAAA,CAACL,MAAM;MAAAkB,QAAA,gBACLb,OAAA,CAACN,KAAK;QACJoB,IAAI,EAAC,OAAO;QACZC,OAAO,eAAEf,OAAA,CAACH,QAAQ;UAACmB,YAAY,EAAEP;QAAiB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eACFpB,OAAA,CAACN,KAAK;QACJoB,IAAI,EAAE,qBAAqBX,QAAQ,cAAcE,SAAS,EAAG;QAC7DU,OAAO,EACLZ,QAAQ,IACRE,SAAS,IACTE,QAAQ,iBACNP,OAAA,CAACF,WAAW;UACVkB,YAAY,EAAEP,gBAAiB;UAC/BN,QAAQ,EAAEA,QAAS;UACnBE,SAAS,EAAEA,SAAU;UACrBE,QAAQ,EAAEA;QAAS;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB;MAEJ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACFpB,OAAA,CAACN,KAAK;QAACoB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEf,OAAA,CAACJ,QAAQ;UAACyB,EAAE,EAAC;QAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAAClB,EAAA,CArCID,GAAa;AAAAqB,EAAA,GAAbrB,GAAa;AAuCnB,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}