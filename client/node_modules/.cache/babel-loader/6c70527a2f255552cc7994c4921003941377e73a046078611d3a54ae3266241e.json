{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yjche\\\\JSProjects\\\\Personal\\\\weather-forecasting-app\\\\client\\\\src\\\\components\\\\WeatherComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherComponent = ({\n  latitude,\n  longitude,\n  location\n}) => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    console.log(latitude, longitude);\n    console.log(location);\n    const fetchWeatherData = async () => {\n      try {\n        const response = await fetch(`/weather?latitude=${latitude}&longitude=${longitude}`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch weather data\");\n        }\n        const data = await response.json();\n        console.log(data);\n        setWeatherData(data);\n        setError(\"\");\n      } catch (e) {\n        if (e instanceof Error) {\n          setError(e.message);\n        } else {\n          setError(\"An unknown error occurred\");\n        }\n        setWeatherData(null);\n      }\n    };\n    fetchWeatherData();\n  }, [latitude, longitude]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherComponent, \"eagXZWkI3QRICZ0puk6GBTf636o=\");\n_c = WeatherComponent;\nexport default WeatherComponent;\nvar _c;\n$RefreshReg$(_c, \"WeatherComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherComponent","latitude","longitude","location","_s","weatherData","setWeatherData","error","setError","console","log","fetchWeatherData","response","fetch","ok","Error","data","json","e","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yjche/JSProjects/Personal/weather-forecasting-app/client/src/components/WeatherComponent.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\ninterface WeatherComponentProps {\r\n  latitude: string;\r\n  longitude: string;\r\n  location: string;\r\n}\r\n\r\nconst WeatherComponent: React.FC<WeatherComponentProps> = ({\r\n  latitude,\r\n  longitude,\r\n  location,\r\n}) => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(latitude, longitude);\r\n    console.log(location);\r\n    const fetchWeatherData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `/weather?latitude=${latitude}&longitude=${longitude}`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch weather data\");\r\n        }\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setWeatherData(data);\r\n        setError(\"\");\r\n      } catch (e) {\r\n        if (e instanceof Error) {\r\n          setError(e.message);\r\n        } else {\r\n          setError(\"An unknown error occurred\");\r\n        }\r\n        setWeatherData(null);\r\n      }\r\n    };\r\n\r\n    fetchWeatherData();\r\n  }, [latitude, longitude]);\r\n\r\n  return (\r\n    <div>\r\n      {error && <p>Error: {error}</p>}\r\n      {weatherData && <div>{/* Placeholder */}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQnD,MAAMC,gBAAiD,GAAGA,CAAC;EACzDC,QAAQ;EACRC,SAAS;EACTC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAACT,QAAQ,EAAEC,SAAS,CAAC;IAChCO,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;IACrB,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qBAAqBZ,QAAQ,cAAcC,SAAS,EACtD,CAAC;QACD,IAAI,CAACU,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;QACjD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCR,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;QACjBV,cAAc,CAACU,IAAI,CAAC;QACpBR,QAAQ,CAAC,EAAE,CAAC;MACd,CAAC,CAAC,OAAOU,CAAC,EAAE;QACV,IAAIA,CAAC,YAAYH,KAAK,EAAE;UACtBP,QAAQ,CAACU,CAAC,CAACC,OAAO,CAAC;QACrB,CAAC,MAAM;UACLX,QAAQ,CAAC,2BAA2B,CAAC;QACvC;QACAF,cAAc,CAAC,IAAI,CAAC;MACtB;IACF,CAAC;IAEDK,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACV,QAAQ,EAAEC,SAAS,CAAC,CAAC;EAEzB,oBACEH,OAAA;IAAAqB,QAAA,GACGb,KAAK,iBAAIR,OAAA;MAAAqB,QAAA,GAAG,SAAO,EAACb,KAAK;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9BnB,WAAW,iBAAIN,OAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA6B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACpB,EAAA,CA1CIJ,gBAAiD;AAAAyB,EAAA,GAAjDzB,gBAAiD;AA4CvD,eAAeA,gBAAgB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}